{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nimport streams from '../apis/streams';\nimport { formValues } from 'redux-form';\nimport history from '../history';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post('/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["C:/Users/user/React_courses_1/streams/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","streams","formValues","history","signIn","userId","type","payload","signOut","createStream","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"AAAA,SACIA,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,WAPJ,QAQW,SARX;AAUA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEZ,OADH;AAEHa,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEX;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMc,YAAY,GAAGP,UAAU,IAAI,OAAOQ,QAAP,EAAgBC,QAAhB,KAA6B;AAE/D,QAAM;AAAEN,IAAAA;AAAF,MAAaM,QAAQ,GAAGC,IAA9B;AAEA,QAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,UAAb,EAA0B,EAAC,GAAGZ,UAAJ;AAAgBG,IAAAA;AAAhB,GAA1B,CAAvB;AAEDK,EAAAA,QAAQ,CAAE;AAACJ,IAAAA,IAAI,EAAEV,aAAP;AAAsBW,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAAxC,GAAF,CAAR;AAECZ,EAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACH,CATE;AAYP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMP,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAY,UAAZ,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAACJ,IAAAA,IAAI,EAAET,aAAP;AAAuBU,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAMV,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAACJ,IAAAA,IAAI,EAAER,YAAP;AAAsBS,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKlB,UAAL,KAAoB,MAAMQ,QAAN,IAAkB;AAC5D,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACqB,KAAR,CAAe,YAAWF,EAAG,EAA7B,EAAgClB,UAAhC,CAAvB;AAGAQ,EAAAA,QAAQ,CAAC;AAACJ,IAAAA,IAAI,EAAEN,WAAP;AAAoBO,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACAZ,EAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACH,CANM;AAQP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMV,QAAN,IAAkB;AAClD,QAAMT,OAAO,CAACuB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAV,EAAAA,QAAQ,CAAC;AAACJ,IAAAA,IAAI,EAAEP,aAAP;AAAsBQ,IAAAA,OAAO,EAAEa;AAA/B,GAAD,CAAR;AACH,CAJM","sourcesContent":["import { \r\n    SIGN_IN ,\r\n    SIGN_OUT, \r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,  \r\n    EDIT_STREAM\r\n    } from './types';\r\n\r\nimport streams from '../apis/streams';\r\nimport { formValues } from 'redux-form';\r\nimport history from '../history';\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    };\r\n};\r\n\r\nexport const createStream = formValues => async (dispatch,getState) => {\r\n       \r\n        const { userId } = getState().auth;\r\n\r\n        const response = await streams.post('/streams' , {...formValues, userId });\r\n\r\n       dispatch( {type: CREATE_STREAM, payload: response.data})\r\n    \r\n        history.push('/');\r\n    };\r\n\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get('/streams');\r\n\r\n    dispatch({type: FETCH_STREAMS , payload: response.data});\r\n};\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`);\r\n\r\n    dispatch({type: FETCH_STREAM , payload: response.data});\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const response = await streams.patch(`/streams/${id}`, formValues);\r\n\r\n\r\n    dispatch({type: EDIT_STREAM, payload: response.data});\r\n    history.push('/');\r\n};\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n    await streams.delete(`/streams/${id}`);\r\n\r\n    dispatch({type: DELETE_STREAM, payload: id});\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}