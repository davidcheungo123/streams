{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\React_courses_1\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\nimport _ from 'lodash';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 24\n        }\n      }, \"Loading......\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, \"Edit a Stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      initialValues: _.pick(this.props.stream, 'title', 'description'),\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["C:/Users/user/React_courses_1/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","_","StreamEdit","Component","onSubmit","formValues","console","log","componentDidMount","props","match","params","id","render","stream","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAuC,eAAvC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAMrCC,QANqC,GAMzBC,UAAD,IAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,KARoC;AAAA;;AAErCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWX,WAAX,CAAuB,KAAKW,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAMDC,EAAAA,MAAM,GAAG;AAED,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,UAAD;AACA,MAAA,aAAa,EAAIb,CAAC,CAACc,IAAF,CAAO,KAAKN,KAAL,CAAWK,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CADjB;AAEC,MAAA,QAAQ,EAAE,KAAKV,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AASP;;AAxBoC;;AA6BzC,MAAMY,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEJ,IAAAA,MAAM,EAAGG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAX,GAAP;AACH,CAFD;;AAKA,eAAef,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAsDG,UAAtD,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\nimport _ from 'lodash';\r\n\r\nclass StreamEdit extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        console.log(formValues);\r\n    };\r\n\r\n    render() {\r\n\r\n            if (!this.props.stream) {\r\n                return <div>Loading......</div>;\r\n            }\r\n            return (\r\n                <div>\r\n                    <h3>Edit a Stream</h3>\r\n                    <StreamForm\r\n                    initialValues = {_.pick(this.props.stream, 'title', 'description')}\r\n                     onSubmit={this.onSubmit}\r\n                      />\r\n                </div>\r\n            );\r\n    }\r\n    }\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream : state.streams[ownProps.match.params.id]};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}